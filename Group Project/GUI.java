/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package datastructproject;

import javax.swing.JOptionPane;

/**
 *
 * @author yapyu
 */
public class GUI extends javax.swing.JFrame {

    static int count = 0;
    static Node head = new Node();
    static Node current = new Node();
    static Node before = new Node();
    static String target = "";

    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addButton = new javax.swing.JButton();
        displayButton = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayOutput = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        locInput = new javax.swing.JTextField();
        facInput = new javax.swing.JTextField();
        actInput = new javax.swing.JTextField();
        durInput = new javax.swing.JTextField();
        budInput = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        targetInput = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        deleteButton = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Vacation Recomender");
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        addButton.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        displayButton.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        displayButton.setText("Display");
        displayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayButtonActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jButton6.setText("Exit");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Display Panel", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 18))); // NOI18N

        displayOutput.setEditable(false);
        displayOutput.setColumns(20);
        displayOutput.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        displayOutput.setRows(5);
        jScrollPane1.setViewportView(displayOutput);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Location");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Facilities");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Activities");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Budget");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Duration (Days)");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Edit Section", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 18))); // NOI18N

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Location:");

        deleteButton.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        searchButton.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        updateButton.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel6)
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(deleteButton)
                        .addGap(18, 18, 18)
                        .addComponent(searchButton)
                        .addGap(18, 18, 18)
                        .addComponent(updateButton))
                    .addComponent(targetInput, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(targetInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteButton)
                    .addComponent(searchButton)
                    .addComponent(updateButton))
                .addGap(35, 35, 35))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(displayButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton6)
                        .addGap(15, 15, 15))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(addButton)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(durInput, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(budInput, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(actInput, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(locInput, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(facInput, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(locInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(facInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(actInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(budInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(durInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(displayButton))
                .addGap(15, 15, 15))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        
        try{
        boolean check = true;
        boolean noduplicate = true;
        String location = locInput.getText();
        String fac = facInput.getText();
        String activity = actInput.getText();
        double budget = Double.parseDouble(budInput.getText());
        int days = Integer.parseInt(durInput.getText());    
        
        if(location.equals("")||fac.equals("")||activity.equals("")||budInput.getText() == null||durInput.getText() == null||budget<=0||days<=0){
            check = false;
        }
        
        if(check){

        Vacay vacay = new Vacay(location, activity, fac, budget, days);

        Node newNode = new Node(vacay);
        if(head==null){
            head=newNode;
            }
        
        else if (head.getInfo()== null) {
            head = newNode;
           /* if(head.getInfo().getLocation().equals(location)){
                JOptionPane.showMessageDialog(null, "This location had been filled", "Error", JOptionPane.ERROR_MESSAGE);
            }*/
        } else {
            current = head;
            // traversing nodes
            if(head.getInfo().getLocation().equals(location)){
                    JOptionPane.showMessageDialog(null, "This location had been filled", "Error", JOptionPane.ERROR_MESSAGE);
                    noduplicate = false;
                }
            while (current.getLink() != null) // current.link != null
            {
                current = current.getLink(); // current = current.link
                
                if(current.getInfo().getLocation().equals(location)){
                    JOptionPane.showMessageDialog(null, "This location had been filled", "Error", JOptionPane.ERROR_MESSAGE);
                    noduplicate = false;
                }
            }
            if(noduplicate)
            current.setLink(newNode); // current.link= newNode
            count++;
        }

        locInput.setText("");
        facInput.setText("");
        actInput.setText("");
        budInput.setText("");
        durInput.setText("");

        current = head;
        String output = "";
        String finalOutput = "";

        if (current == null) {
            displayOutput.setText("empty");
        }
        if(noduplicate){
        JOptionPane.showMessageDialog(null, "Vacation has been updated!", "Add", JOptionPane.INFORMATION_MESSAGE);
        String title = String.format("%1$-40s%2$-30s%3$-20s%4$-15s%5$-5s%n", "Location", "Facilities", "Activity", "Budget(RM)", "Duration(Days)");
        String header = "======================================================================================================================\n";
        while (current != null) {

            output = String.format("%1$-40s%2$-30s%3$-20s%4$-15.2f%5$-5s%n", current.getInfo().getLocation(), current.getInfo().getFac(), current.getInfo().getActivity(), current.getInfo().getBudget(), current.getInfo().getDays());
            finalOutput += output;
            current = current.getLink();
        }
        
        displayOutput.setText(title + header + finalOutput);
        }
        }
        else{
            JOptionPane.showMessageDialog(null, "Please fill in the respective fields correctly", "Error", JOptionPane.ERROR_MESSAGE);
        }
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Please only fill numbers in the Budget/Duration field!", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_addButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        
        try{
        target = targetInput.getText();
        
        if (head.getInfo().getLocation().equals(target)) {
            current = head;
            String output = "";
            String finalOutput = "";

            if (current == null) {
                displayOutput.setText("empty");
            }
            
            String title = String.format("%1$-40s%2$-30s%3$-20s%4$-15s%5$-5s%n", "Location", "Facilities", "Activity", "Budget(RM)", "Duration(Days)");
            String header = "======================================================================================================================\n";

            output = String.format("%1$-40s%2$-30s%3$-20s%4$-15.2f%5$-5s%n", current.getInfo().getLocation(), current.getInfo().getFac(), current.getInfo().getActivity(), current.getInfo().getBudget(), current.getInfo().getDays());
            JOptionPane.showMessageDialog(null, "Search has been performed!", "Search", JOptionPane.INFORMATION_MESSAGE);
            displayOutput.setText(title + header + output);
            
            locInput.setText(head.getInfo().getLocation());
            facInput.setText(head.getInfo().getFac());
            actInput.setText(head.getInfo().getActivity());
            budInput.setText(Double.toString(head.getInfo().getBudget()));
            durInput.setText(Integer.toString(head.getInfo().getDays()));

        } else {
            before = null;
            current = head;

            // current.info != target
            while ((!current.getInfo().getLocation().equals(target)) && (current != null)) {
                if (!current.getInfo().getLocation().equals(target)) {
                    before = current;
                    current = before.getLink();
                }// current = current.link
            }
            if (current.getInfo().getLocation().equals(target)) {  // current.info == target

                String output = "";
                String finalOutput = "";

                if (current == null) {
                    displayOutput.setText("empty");
                }
                String title = String.format("%1$-40s%2$-30s%3$-20s%4$-15s%5$-5s%n", "Location", "Facilities", "Activity", "Budget(RM)", "Duration(Days)");
                String header = "======================================================================================================================\n";

                output = String.format("%1$-40s%2$-30s%3$-20s%4$-15.2f%5$-5s%n", current.getInfo().getLocation(), current.getInfo().getFac(), current.getInfo().getActivity(), current.getInfo().getBudget(), current.getInfo().getDays());
                displayOutput.setText(title + header + output);
                

            }
            locInput.setText(current.getInfo().getLocation());
            facInput.setText(current.getInfo().getFac());
            actInput.setText(current.getInfo().getActivity());
            budInput.setText(Double.toString(current.getInfo().getBudget()));
            durInput.setText(Integer.toString(current.getInfo().getDays()));
        }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Please fill the location that is included in the list only", "Error", JOptionPane.ERROR_MESSAGE);
        }
       


    }//GEN-LAST:event_searchButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        
        boolean noduplicate = true;
        
        try{
        target = targetInput.getText();
        System.out.println(target);

        String location = locInput.getText();
        String fac = facInput.getText();
        String activity = actInput.getText();
        double budget = Double.parseDouble(budInput.getText());
        int days = Integer.parseInt(durInput.getText());

        Vacay vacay = new Vacay(location, activity, fac, budget, days);
        
        
        if (head.getInfo().getLocation().equals(target)) {
            head.setInfo(vacay);

        } else {
            before = null;
            current = head;

            // current.info != target
            while ((!current.getInfo().getLocation().equals(target)) && (current != null)) {
                if (!current.getInfo().getLocation().equals(target)) {
                    before = current;
                    current = before.getLink();
                    if(current.getInfo().getLocation().equals(target)){
                    
                    noduplicate = false;           
                    
                }
                }// current = current.link
            }
            if(current.getInfo().getLocation().equals(location)){
                    noduplicate =true;
                    }
            if(noduplicate){
            if (current.getInfo().getLocation().equals(target)) {  // current.info == target
                current.setInfo(vacay);
            } 
            }
            else{
                JOptionPane.showMessageDialog(null, "This location had been filled", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }

        current = head;
        String output = "";
        String finalOutput = "";
        
        if (current == null) {
            displayOutput.setText("empty");
        }
        if(noduplicate){
        JOptionPane.showMessageDialog(null, "Update has been performed!", "Update", JOptionPane.INFORMATION_MESSAGE);
        String title = String.format("%1$-40s%2$-30s%3$-20s%4$-15s%5$-5s%n", "Location", "Facilities", "Activity", "Budget(RM)", "Duration(Days)");
        String header = "======================================================================================================================\n";
        while (current != null) {

            output = String.format("%1$-40s%2$-30s%3$-20s%4$-15.2f%5$-5s%n", current.getInfo().getLocation(), current.getInfo().getFac(), current.getInfo().getActivity(), current.getInfo().getBudget(), current.getInfo().getDays());
            finalOutput += output;
            current = current.getLink();
        }
        
        displayOutput.setText(title + header + finalOutput);
        
        }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Please fill the location that is included in the list only", "Error", JOptionPane.ERROR_MESSAGE);
        }
        locInput.setText("");
        facInput.setText("");
        actInput.setText("");
        budInput.setText("");
        durInput.setText("");
        targetInput.setText("");
        
    }//GEN-LAST:event_updateButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        
        try{
        target = targetInput.getText();

        if (head.getInfo().getLocation().equals(target)) {
            if(head.getLink()!=null){
            head = head.getLink();} 
            else{
               head=null;
            
            }
        } else {
            before = null;
            current = head;

            // current.info != target
            while ((!current.getInfo().getLocation().equals(target)) && (current != null)) {

                before = current;
                current = before.getLink();
                // current = current.link
            }
            if (current.getInfo().getLocation().equals(target)) {  // current.info == target
                before.setLink(current.getLink());

            } else {
                System.out.println("Target no found");
            }
        }

        String output = "";
        String finalOutput = "";
        String title = String.format("%1$-40s%2$-30s%3$-20s%4$-15s%5$-5s%n", "Location", "Facilities", "Activity", "Budget(RM)", "Duration(Days)");
        String header = "======================================================================================================================\n";
        current = head;

        while (current != null) {

            output = String.format("%1$-40s%2$-30s%3$-20s%4$-15s%5$-5s%n", current.getInfo().getLocation(), current.getInfo().getFac(), current.getInfo().getActivity(), current.getInfo().getBudget(), current.getInfo().getDays());
            finalOutput += output;
            current = current.getLink();
        }
        JOptionPane.showMessageDialog(null, "Delete has been performed!", "Delete", JOptionPane.INFORMATION_MESSAGE);
        displayOutput.setText(title + header + finalOutput);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Please fill the location that is included in the list only", "Error", JOptionPane.ERROR_MESSAGE);
        }
        targetInput.setText("");
        if(head == null){
            displayOutput.setText("The list is empty");
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void displayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayButtonActionPerformed
        
        String title = "";
        String header = "";
        current = head;
        String output = "";
        String finalOutput = "";

        try{
        if (current == null) {
            displayOutput.setText("The list is empty");
        }
        else{
        title = String.format("%1$-40s%2$-30s%3$-20s%4$-15s%5$-5s%n", "Location", "Facilities", "Activity", "Budget(RM)", "Duration(Days)");
        header = "======================================================================================================================\n";
        while (current != null) {

            output = String.format("%1$-40s%2$-30s%3$-20s%4$-15s%5$-5s%n", current.getInfo().getLocation(), current.getInfo().getFac(), current.getInfo().getActivity(), current.getInfo().getBudget(), current.getInfo().getDays());
            finalOutput += output;
            current = current.getLink();
        }
        displayOutput.setText(title + header + finalOutput);
        }
        }catch(NullPointerException e){
            displayOutput.setText("The list is empty");
        }
       

    }//GEN-LAST:event_displayButtonActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField actInput;
    private javax.swing.JButton addButton;
    private javax.swing.JTextField budInput;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton displayButton;
    private javax.swing.JTextArea displayOutput;
    private javax.swing.JTextField durInput;
    private javax.swing.JTextField facInput;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField locInput;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField targetInput;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
